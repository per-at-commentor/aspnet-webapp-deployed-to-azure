name: 61 Prepare release

on:
  workflow_dispatch:
  workflow_call:
    outputs:
      release_tag:
        value: ${{ jobs.prepare_release.outputs.release_tag }}
      release_branch:
        value: ${{ jobs.prepare_release.outputs.release_branch }}

jobs:
  prepare_release:
    runs-on: ubuntu-latest
    outputs:
      release_tag: ${{ steps.app_version.outputs.current_app_version }}
      release_branch: ${{ steps.release_branch.outputs.release_branch }}
    steps:
    - name: Checkout
      uses: actions/checkout@v4.1.1

    - name: Get app version
      id: app_version
      uses: ./.github/actions/get-app-version

    - name: Resolve branch
      id: release_branch
      env:
        MAJOR_SEGMENT: ${{ steps.app_version.outputs.current_major_segment }}
        MINOR_SEGMENT: ${{ steps.app_version.outputs.current_minor_segment }}
      run: |
        release_branch="release/$MAJOR_SEGMENT.$MINOR_SEGMENT"
        echo "Branch: $release_branch"
        echo "release_branch=$release_branch" >> $GITHUB_OUTPUT

    - name: Set Git user info
      if: ${{ github.ref_name == 'main' }}
      run: |
        git config user.name "Workflow"
        git config user.email ""

    - name: Create release branch
      if: ${{ github.ref_name == 'main' }}
      env:
        RELEASE_BRANCH: ${{ steps.release_branch.outputs.release_branch }}
      run: |
        echo "Create release branch $RELEASE_BRANCH"
        git switch -c $RELEASE_BRANCH
        echo "Push release branch to origin"
        git push --set-upstream origin $RELEASE_BRANCH
        echo "Switch back to current branch"
        git switch $GITHUB_REF_NAME

    - name: Bump minor version
      if: ${{ github.ref_name == 'main' }}
      uses: ./.github/actions/set-app-version
      with:
        app_version: ${{ steps.app_version.outputs.next_minor_app_version }}

    - name: GitHub draft release
      env:
        GH_TOKEN: ${{ secrets.WORKFLOW_GITHUB_TOKEN }}
        RELEASE_TAG: ${{ steps.app_version.outputs.current_app_version }}
        RELEASE_BRANCH: ${{ steps.release_branch.outputs.release_branch }}
      run: |
        gh release create $RELEASE_TAG --title $RELEASE_TAG --target $RELEASE_BRANCH --draft