name: 30 Delete environment

on:
  workflow_dispatch:
    inputs:
      ENV_NAME:
        description: Environment
        type: environment
        required: true

jobs:
  azure:
    runs-on: ubuntu-latest
    environment: ${{ inputs.ENV_NAME }}
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4.1.1

    - name: Prepare Terraform variables
      run: |
        echo 'APP_NAME="${{ vars.APP_NAME }}"' >> terraform.tfvars
        echo 'ENV_NAME="${{ inputs.ENV_NAME }}"' >> terraform.tfvars
        cat terraform.tfvars

    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v3.0.0
      with:
        terraform_version: 1.7.0

    - name: Terraform init
      run: |
        export ARM_ACCESS_KEY=${{ secrets.TERRAFORM_BACKEND_STORAGE_ACCESS_KEY }}
        terraform init \
          -backend-config="resource_group_name=${{ vars.TERRAFORM_RESOURCE_GROUP_NAME }}" \
          -backend-config="storage_account_name=${{ vars.TERRAFORM_STORAGE_ACCOUNT_NAME }}" \
          -backend-config="container_name=${{ vars.TERRAFORM_STORAGE_CONTAINER_NAME }}" \
          -backend-config="key=${{ vars.APP_NAME }}-${{ inputs.ENV_NAME }}.tfstate"

    - name: Terraform destroy
      run: |
        export ARM_SUBSCRIPTION_ID="${{ vars.WORKFLOW_AZURE_SUBSCRIPTION_ID }}"
        export ARM_TENANT_ID="${{ vars.WORKFLOW_AZURE_TENANT_ID }}"
        export ARM_CLIENT_ID="${{ vars.WORKFLOW_AZURE_CLIENT_ID }}"
        export ARM_CLIENT_SECRET="${{ secrets.WORKFLOW_AZURE_CLIENT_SECRET }}"
        terraform destroy --auto-approve

  github:
    needs: azure
    runs-on: ubuntu-latest
    steps:
    - name: Delete GitHub Environment
      id: github
      env:
        GH_TOKEN: ${{ secrets.WORKFLOW_GITHUB_TOKEN }}
        ENV_NAME: ${{ inputs.ENV_NAME }}
        REPO: ${{ github.repository }}
      run: |
        echo "=== DELETE GITHUB ENV [$ENV_NAME] ==="
        gh api --method DELETE repos/$REPO/environments/$ENV_NAME

      
