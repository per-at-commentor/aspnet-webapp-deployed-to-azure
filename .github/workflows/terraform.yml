name: Terraform

on:
  workflow_dispatch:
    inputs:
      ENV_NAME:
        description: Environment name
        type: environment
        required: true

jobs:
  terraform-plan:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4.1.1

      - name: Prepare Terraform variables
        run: |
          echo 'APP_NAME="${{ vars.APP_NAME }}"' >> terraform.tfvars
          echo 'ENV_NAME="${{ inputs.ENV_NAME }}"' >> terraform.tfvars
          cat terraform.tfvars

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3.0.0
        with:
          terraform_version: 1.7.0

      - name: Show files
        run: |
          ls -AR --ignore=src --ignore=.github --ignore=.git

      - name: Terraform init
        run: |
          export ARM_ACCESS_KEY=${{ secrets.TERRAFORM_ACCESS_KEY }}
          terraform init \
            -backend-config="resource_group_name=${{ vars.TERRAFORM_RESOURCE_GROUP_NAME }}" \
            -backend-config="storage_account_name=${{ vars.TERRAFORM_STORAGE_ACCOUNT_NAME }}" \
            -backend-config="container_name=${{ vars.TERRAFORM_STORAGE_CONTAINER_NAME }}" \
            -backend-config="key=${{ vars.APP_NAME }}-${{ inputs.ENV_NAME }}.tfstate"

      - name: Show files
        run: |
          ls -AR --ignore=src --ignore=.github --ignore=.git

      - name: Show .terraform.lock.hcl
        run: |
          cat .terraform.lock.hcl

      - name: Terraform validate
        run: terraform validate

      - name: Terraform plan
        run: |
          export ARM_SUBSCRIPTION_ID="${{ vars.WORKFLOW_AZURE_SUBSCRIPTION_ID }}"
          export ARM_TENANT_ID="${{ vars.WORKFLOW_AZURE_TENANT_ID }}"
          export ARM_CLIENT_ID="${{ vars.WORKFLOW_AZURE_CLIENT_ID }}"
          export ARM_CLIENT_SECRET="${{ secrets.WORKFLOW_AZURE_CLIENT_SECRET }}"
          terraform plan -out=tfplan

      - name: Show files
        run: |
          ls -AR --ignore=src --ignore=.github --ignore=.git

      - name: Upload files
        uses: actions/upload-artifact@v4.2.0
        with:
          name: plan
          path: |
            terraform.tfvars
            .terraform.lock.hcl
            tfplan

  terraform-apply:
    runs-on: ubuntu-latest
    needs: terraform-plan
    environment: ${{ inputs.ENV_NAME }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4.1.1

      - name: Download files
        uses: actions/download-artifact@v4.1.1
        with:
          name: files

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3.0.0
        with:
          terraform_version: 1.7.0

      - name: Terraform init
        run: |
          export ARM_ACCESS_KEY=${{ secrets.TERRAFORM_ACCESS_KEY }}
          terraform init \
            -backend-config="resource_group_name=${{ vars.TERRAFORM_RESOURCE_GROUP_NAME }}" \
            -backend-config="storage_account_name=${{ vars.TERRAFORM_STORAGE_ACCOUNT_NAME }}" \
            -backend-config="container_name=${{ vars.TERRAFORM_STORAGE_CONTAINER_NAME }}" \
            -backend-config="key=${{ vars.APP_NAME }}-${{ inputs.ENV_NAME }}.tfstate"

      - name: Terraform apply
        run: |
          export ARM_SUBSCRIPTION_ID="${{ vars.WORKFLOW_AZURE_SUBSCRIPTION_ID }}"
          export ARM_TENANT_ID="${{ vars.WORKFLOW_AZURE_TENANT_ID }}"
          export ARM_CLIENT_ID="${{ vars.WORKFLOW_AZURE_CLIENT_ID }}"
          export ARM_CLIENT_SECRET="${{ secrets.WORKFLOW_AZURE_CLIENT_SECRET }}"
          terraform apply tfplan
