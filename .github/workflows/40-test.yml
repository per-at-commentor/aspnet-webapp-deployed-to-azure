name: 40 Test

on:
  pull_request:
    branches:
      - "**"
    paths:
      - src/**
  push:
    branches:
      - main
      - release/*
    paths:
      - src/**
  workflow_dispatch:

permissions:
  pull-requests: read
  contents: read
  actions: read
  checks: write

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    steps:
      # JDK required by Sonar
      - name: Setup JDK
        uses: actions/setup-java@v4.1.0
        with:
          java-version: 17
          distribution: 'zulu'

      - name: Setup .NET
        uses: actions/setup-dotnet@v4.0.0
        with:
          dotnet-version: 8.0.x

      - name: Checkout
        uses: actions/checkout@v4.1.1
        with:
          fetch-depth: 0  # Shallow clones should be disabled for a better relevancy of analysis

      - name: Cache SonarCloud packages
        uses: actions/cache@v4.0.1
        with:
          path: ~/sonar/cache
          key: ${{ runner.os }}-sonar
          restore-keys: ${{ runner.os }}-sonar

      - name: Cache dotnet tools
        id: cache-dotnet-tools
        uses: actions/cache@v4.0.1
        with:
          path: ./.dotnet-tools
          key: ${{ runner.os }}-dotnet-tools
          restore-keys: ${{ runner.os }}-dotnet-tools

      - name: Install dotnet tools
        if: steps.cache-dotnet-tools.outputs.cache-hit != 'true'
        run: |
          dotnet tool update dotnet-sonarscanner --version 6.2.0 --tool-path ./.dotnet-tools
          dotnet tool update dotnet-reportgenerator-globaltool --version 5.2.2 --tool-path ./.dotnet-tools

      - name: dotnet sonarscanner begin
        run: |
          ./.dotnet-tools/dotnet-sonarscanner begin \
            /k:"per-at-commentor_aspnet-webapp-deployed-to-azure" \
            /o:"per-at-commentor" \
            /d:sonar.token="${{ secrets.SONAR_TOKEN }}" \
            /d:sonar.host.url="https://sonarcloud.io" \
            /d:sonar.cs.opencover.reportsPaths="**/coverage.opencover.xml"

      - name: dotnet restore
        run: dotnet restore src

      - name: dotnet build
        run: dotnet build src --no-restore

      - name: dotnet test
        run: dotnet test src --no-build --collect:"XPlat Code Coverage;Format=opencover" --logger "trx;LogFileName=test-results.trx"

      - name: Print coverage report to console
        run: |
          ./.dotnet-tools/reportgenerator -reports:**/coverage.opencover.xml -targetdir:coverage-reports -reporttypes:TextSummary
          cat coverage-reports/Summary.txt

      - name: Publish test report to GitHub
        # This makes the test results show up in the list of jobs executed on the workflow... notice there is an issue, so it might be shown on the wrong workflow.
        uses: dorny/test-reporter@v1.8.0
        if: success() || failure()
        with:
          name: Test report
          path: "**/test-results.trx"
          reporter: dotnet-trx

      - name: dotnet sonarscanner end
        if: success() || failure()
        run: ./.dotnet-tools/dotnet-sonarscanner end /d:sonar.token="${{ secrets.SONAR_TOKEN }}"
