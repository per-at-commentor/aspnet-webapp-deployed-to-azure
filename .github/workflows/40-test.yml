name: 40 Test
run-name: "${{ github.workflow }}${{ github.event_name == 'pull_request' && format(' - PR #{0} {1}', github.event.pull_request.number, github.event.pull_request.title) }}"

on:
  pull_request:
    branches:
      - "**"
    paths:
      - src/**
  push:
    branches:
      - main
      - release/*
    paths:
      - src/**
  workflow_dispatch:

permissions:
  pull-requests: read
  contents: read
  actions: read
  checks: write

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    steps:
      # JDK required by Sonar
      - name: Setup JDK
        uses: actions/setup-java@v4.1.0
        with:
          java-version: 17
          distribution: 'zulu'

      - name: Setup .NET
        uses: actions/setup-dotnet@v4.0.0
        with:
          dotnet-version: 8.0.x

      - name: Checkout
        uses: actions/checkout@v4.1.1
        with:
          fetch-depth: 0  # Shallow clones should be disabled for better SonarCloud analysis

      - name: Cache SonarCloud packages
        uses: actions/cache@v4.0.1
        with:
          path: ~/sonar/cache
          key: ${{ runner.os }}-sonar
          restore-keys: ${{ runner.os }}-sonar

      - name: Cache analysis tools
        id: cache-analysis-tools
        uses: actions/cache@v4.0.1
        with:
          path: ./.analysis-tools
          key: ${{ runner.os }}-analysis-tools
          restore-keys: ${{ runner.os }}-analysis-tools

      - name: Install dotnet tools
        if: steps.cache-analysis-tools.outputs.cache-hit != 'true'
        run: |
          dotnet tool update dotnet-sonarscanner --version 6.2.0 --tool-path ./.analysis-tools
          dotnet tool update dotnet-reportgenerator-globaltool --version 5.2.2 --tool-path ./.analysis-tools

      - name: dotnet sonarscanner begin
        run: |
          ./.analysis-tools/dotnet-sonarscanner begin \
            /k:"${{ vars.SONAR_PROJECT_KEY }}" \
            /o:"${{ vars.SONAR_ORGANIZATION_KEY }}" \
            /d:sonar.token="${{ secrets.SONAR_TOKEN }}" \
            /d:sonar.host.url="https://sonarcloud.io" \
            /d:sonar.cs.opencover.reportsPaths="**/coverage.opencover.xml"

      - name: dotnet restore
        run: dotnet restore src

      - name: dotnet build
        run: dotnet build src --no-restore

      - name: dotnet test
        run: dotnet test src --no-build --collect:"XPlat Code Coverage;Format=opencover" --logger "trx;LogFileName=test-results.trx"

      - name: Print coverage report
        run: |
          ./.analysis-tools/reportgenerator -reports:**/coverage.opencover.xml -targetdir:coverage-reports -reporttypes:TextSummary
          cat coverage-reports/Summary.txt

      - name: Publish test report as a check run
        # This makes the test results available on pull-requsts in GitHub, to make it easier to find failed tests.
        # Notice there is an issue, so it might be shown under the wrong workflow/check suite.
        uses: dorny/test-reporter@v1.8.0
        if: success() || failure()
        with:
          name: Test report
          path: "**/test-results.trx"
          reporter: dotnet-trx

      - name: dotnet sonarscanner end
        if: success() || failure()
        run: ./.analysis-tools/dotnet-sonarscanner end /d:sonar.token="${{ secrets.SONAR_TOKEN }}"
